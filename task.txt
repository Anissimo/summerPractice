Задача "Поиск критериев подобия". 
	Дан физический закон, описанный в виде нелинейного уравнения, устанавливающий зависимость между многими физическими величинами. 
	Нам нужно найти ВСЕ безразмерные величины, которые получаются путем сочетания (переможения/деления) размерных величин.
	Например, возьмем всем известный второй закон Ньютона, который записывается как F   = m * a.
	Или F=mdV/dt или F=m(V2-V1)/dt или F=m(l/t2), предполагая, что t->0. 
	Из сочетания величин, входящих в этот закон, можно получить хорошо известное в узком кругу число Ньютона (или критерий подобия механического движения), 
	которое равно 
	Действительно, Н*с2/(м*кг) = (кг*м/с2) *с2/(м*кг), откуда видно, что все единицы измерения сокращаются и в результате получается безразмерное число. 
	На самом деле, таких критериев подобия может быть много и в них необязательно используются все величины, входящие в формулу. 
	Критериев подобия огромное количество, число Рейнольдса, коэффициент Пуассона, модуль Юнга и так далее и тому подобное. 
	Критерии подобия очень важны при изучении физических процессов и их нахождение является важной задачей любой исследовательской работы в области физики.

Что нужно сделать в рамках летней практики по пунктам:
1 пункт. Алгоритмический. 
	Написать сам алгоритм. 
	Вообще говоря, решение этой задачи сводится к 
	решению n систем линейных уравнений по числу переменных в законе. 
	Как составить такие системы можно легко найти в интернете. 

	Соответственно, нужно написать программу,
	-  в которой выбрать базис физических единиц (то есть единицы измерения, которые не выражаются одна через другую секунда, метр, кг и т. д. 
	Ньютон сюда входить не должен, поскольку он представляется через базисные единицы как кг*м/с2). На данном этапе может быть хардкод

	- которая на вход получает закон, записанный в буквенной форме, например, рассмотренный случай F = m(l/t2), определить единицы измерения для каждой величины. Каждая величина должна иметь разложение на базисные единицы (см предыдущий подпункт)

	- которая составит n систем линейных уравнений

	- которая решит n систем линейных уравнений и вернет ВСЕ найденные критерии подобия.

	ВНИМАНИЕ: алгоритм решения систем линейных уравнений пишете САМИ. Использование библиотек СТРОГО запрещено! :)

2 пункт. Дехардкодный. 
	В этом пункте все, что мы захардкодили до этого должно быть вынесено в параметры и определено пользователем при запуске программы

3 пункт. UIный. 
	Рисуем UI на любом языке (C#, например) и позволяем пользователю забивать данные не в файле, не в коммандную строку, а в удобные контрольчики. 

4 пункт. базоданновый. 
	Каждый раз вводить единицы измерения, определять, как они раскладываются по базису или хранить их в файле не комильфо. 
	Поэтому добавляем БД. Какую угодно. 
	Пара таблиц и вы избавлены от необходимости повторять одни и те же действия всякий раз, когда хотите воспользоваться программой.

5 пункт. технологический. 
	Пытаемся засунуть ваш алгоритм в докер. 
	Заодно знакомимся с этой мегатехнологией. 
	Если вы писали на c#, то вроде ваша программа должна довольно легко трансформироваться в веб приложение. 
	Инструкций как сбилдить докер образ для вашего приложения на c# в избытке. 
	Дружим ваш алгоритм с базой данных, поднятой на предыдущем пункте. 
	Базу нужно тоже засунуть в докер. 
	По результату этого пункта, вы должны получить докер образ, который запускается с параметрами из кли и возвращает результаты с критериями подобия, например в виде файла

6 пункт. Окончательный. Для сильных духом. 
	Делаем из кли веб сервис, который по запросу из браузера, будет показывать пользователю серию форм (никаких ограничений в выборе технологий на ЮИ, это может быть банальный html, сгенерированный сервисом), в числе которых
		- форма ввода физического уравнения
		- форма, в которой задаются величины измерения для каждой величины
		- форма редактирования разложения физических единиц измерения по базисным единицам
		- форма вывода результата
